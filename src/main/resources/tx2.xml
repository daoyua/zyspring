<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p" xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/aop https://www.springframework.org/schema/aop/spring-aop.xsd
       http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/tx https://www.springframework.org/schema/tx/spring-tx.xsd
">

    <!--配置server-->
    <bean id="accountServer2" class="com.springtest.zy.spring.tx.AccountServerImp2">
        <property name="accountDao" ref="accountDao2"></property>
    </bean>
    <!--配置dao-->
    <bean name="accountDao2" class="com.springtest.zy.spring.tx.AccountDaoImp">
        <!--
        dao继承了JdbcDaoSupport后会自动创建jdbcTemplate，只要注入dataSource
        <property name="jdbcTemplate" ref="jdbcTemplete"></property>
         <bean id="jdbcTemplete" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource"></property>
    </bean>
        -->

        <property name="dataSource" ref="dataSource2"></property>
    </bean>
    <!-- 第二种方式通过context标签引入的 -->
    <context:property-placeholder location="classpath:jdbc.properties"/>
    <bean id="dataSource2" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="${jdbc.driverClassName}"></property>
        <property name="url" value="${jdbc.url}"></property>
        <property name="username" value="${jdbc.username}"></property>
        <property name="password" value="${jdbc.password}"></property>
    </bean>
    <!--1配置事务管理器-->
    <bean id="dataSourceTransactionManager2" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource2"></property>
    </bean>
    <!--2配置事物的增强-->
    <tx:advice id="transactionInterceptor" transaction-manager="dataSourceTransactionManager2">
        <tx:attributes>
            <tx:method name="*" propagation="REQUIRED"/>
            <!--<tx:method name="transfer" propagation="REQUIRED"/>-->
            <!--<tx:method name="save*" propagation="REQUIRED"/>-->
        </tx:attributes>
    </tx:advice>
    <!--3aop的配置-->
    <aop:config  proxy-target-class="true">
        <!--切入点-->
        <!--<aop:pointcut id="transf" expression="execution(* com.springtest.zy.spring.tx.AccountServerImp2.transfer(..))"></aop:pointcut>-->
        <aop:pointcut id="transf"
                      expression="execution(* com.springtest.zy.spring.tx.AccountServerImp2.*(..))"></aop:pointcut>
        <!--切入面，advisor单个增强，aspect多个切入点，多个通知增强-->
        <aop:advisor advice-ref="transactionInterceptor" pointcut-ref="transf"></aop:advisor>
    </aop:config>
</beans>