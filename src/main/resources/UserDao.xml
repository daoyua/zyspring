<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.itcast.dao.UserDao">
    <cache/>
    <resultMap id="baseMap" type="domain.User">
        <id column="id" property="id"/>
        <result column="username" property="username"/>
        <result column="birthday" property="birthday"/>
        <result column="sex" property="sex"/>
        <result column="address" property="address"/>
    </resultMap>
    <select id="findAll" resultMap="baseMap">
        select * from user ;
    </select>
    <select id="findbyid" resultType="user">
        select * from user where  id=#{aa}
    </select>
    <insert id="save" parameterType="domain.User" >
        insert into user values (null ,#{username},#{birthday},#{sex},#{address});
    </insert>
    <update id="update" parameterType="domain.User" >
       update user set username = #{username},birthday = #{birthday} , sex=#{sex},address =#{address} where id = #{id}
    </update>
    <delete id="deleteid" parameterType="int" >
       delete  from user  where id=#{id}
    </delete>
    <select id="findtwo" resultType="domain.User" parameterType="domain.User">
        select * from user where username = #{username} and sex = #{sex}
    </select>
    <select id="findmap" resultType="domain.User" parameterType="domain.User">
        select * from user where username = #{name} and sex = #{sex}
    </select>
    <select id="findnamesex" resultType="domain.User" >
        select * from user where username = #{arg0} and sex = #{arg1}
    </select>
    <select id="findnamesex1" resultType="domain.User" >
        select * from user where username = #{param1} and sex =#{param2}
    </select>
    <select id="findByParamAnno" resultType="domain.User" >
        select * from user where username = #{name} and sex =#{sex}
    </select>
    <select id="findmohu" resultType="domain.User" parameterType="string">
        select * from user where username like #{username};
    </select>
    <select id="findmohu1" resultType="domain.User" parameterType="string">
        select * from user where username like '%${value}';
    </select>
    <insert id="savebykey" parameterType="domain.User" useGeneratedKeys="true" keyProperty="id">
          insert into user values (null,#{username},#{birthday},#{sex},#{address});
    </insert>
    <insert id="savebykey2" parameterType="user">
    <selectKey keyProperty="id" keyColumn="id" resultType="int" order="AFTER">
        SELECT LAST_INSERT_ID();
    </selectKey>
        insert into user values (null,#{username},#{birthday},#{sex},#{address});
    </insert>
    <select id="findwang" resultType="user" parameterType="user">
        select * from user  where username like #{username}
        <if test="sex !=null and sex !=''">
            and sex=#{sex};
        </if>
    </select>
    <select id="findidusername" resultType="user" parameterType="user">
        select * from user where
        <choose>
            <when test="id!=null and id !=''">
              id=#{id}
            </when>
            <when test="username!=null and username !=''">
                username=#{username}
            </when>
            <otherwise>
                1=1;
            </otherwise>
        </choose>
    </select>
    <select id="finduserall" parameterType="user" resultType="user">
        select * from user
        <where>
            <if test="username != null and username != ''">
                and username like #{username}
            </if>
            <if test="sex != null and sex != ''">
                and sex =#{sex}
            </if>
        </where>
    </select>
    <update id="updateset" parameterType="user">
        update  user
      <set>
          <if test="username != null and username != ''">
              username = #{username},
          </if>
          <if test="sex != null and sex != ''">
              sex = #{sex},
          </if>
          <if test="birthday != null and birthday != ''">
              birthday = #{birthday},
          </if>
          <if test="address != null and address != ''">
              address = #{address},
          </if>
      </set>
        where id=#{id}
    </update>
    <select id="findforeachlist" parameterType="list" resultType="user">
        select  * from user where
        <foreach collection="list" open="id in(" close=")" item="n" separator=",">
            #{n}
        </foreach>
    </select>
    <select id="findeacharr" parameterType="int[]" resultType="user">
        select  * from user where 
        <foreach collection="array" open="id in(" close=")" item="n" separator=",">
            #{n}
        </foreach>
    </select>
    <select id="findforeachobj" resultType="user" parameterType="queryVo">
        select * from  user  where
        <foreach collection="ids" open="id in(" close=")" item="n" separator=",">
            #{n}
        </foreach>
    </select>
    <resultMap id="withOrder" type="user">
        <id property="id" column="id"/>
        <result property="address" column="address"/>
        <result property="birthday" column="birthday"/>
        <result property="sex" column="sex"/>
        <result property="username" column="username"/>
        <collection property="orderList" ofType="order"
                    select="cn.itcast.dao.OrderDao.findbyorder" column="id"
        fetchType="lazy" />
    </resultMap>
    <select id="findbydu" resultMap="withOrder" parameterType="int">
       select * from user  where id= #{id}
    </select>
</mapper>